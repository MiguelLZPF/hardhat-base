/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { LockUpgr, LockUpgrInterface } from "../../contracts/LockUpgr";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "when",
        type: "uint256",
      },
    ],
    name: "Withdrawal",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_unlockTime",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unlockTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506103af806100206000396000f3fe60806040526004361061003f5760003560e01c8063251c1aa3146100445780633ccfd60b1461006d5780638da5cb5b14610084578063fe4b84df146100bc575b600080fd5b34801561005057600080fd5b5061005a60015481565b6040519081526020015b60405180910390f35b34801561007957600080fd5b506100826100cf565b005b34801561009057600080fd5b506002546100a4906001600160a01b031681565b6040516001600160a01b039091168152602001610064565b6100826100ca366004610360565b6101e4565b60015442101561011f5760405162461bcd60e51b8152602060048201526016602482015275165bdd4818d85b89dd081dda5d1a191c985dc81e595d60521b60448201526064015b60405180910390fd5b6002546001600160a01b031633146101705760405162461bcd60e51b81526020600482015260146024820152732cb7ba9030b932b713ba103a34329037bbb732b960611b6044820152606401610116565b604080514781524260208201527fbf2ed60bd5b5965d685680c01195c9514e4382e28e3a5a2d2d5244bf59411b93910160405180910390a16002546040516001600160a01b03909116904780156108fc02916000818181858888f193505050501580156101e1573d6000803e3d6000fd5b50565b600054610100900460ff16158080156102045750600054600160ff909116105b8061021e5750303b15801561021e575060005460ff166001145b6102815760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610116565b6000805460ff1916600117905580156102a4576000805461ff0019166101001790555b8142106102ff5760405162461bcd60e51b815260206004820152602360248201527f556e6c6f636b2074696d652073686f756c6420626520696e207468652066757460448201526275726560e81b6064820152608401610116565b6001829055600280546001600160a01b03191633179055801561035c576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050565b60006020828403121561037257600080fd5b503591905056fea2646970667358221220b6d2ef74bcc6e2fb5acad81ab2a69e22f176baf5a7bc6ec18a4bed41a9a5771d64736f6c634300080d0033";

type LockUpgrConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LockUpgrConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LockUpgr__factory extends ContractFactory {
  constructor(...args: LockUpgrConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<LockUpgr> {
    return super.deploy(overrides || {}) as Promise<LockUpgr>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): LockUpgr {
    return super.attach(address) as LockUpgr;
  }
  override connect(signer: Signer): LockUpgr__factory {
    return super.connect(signer) as LockUpgr__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LockUpgrInterface {
    return new utils.Interface(_abi) as LockUpgrInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LockUpgr {
    return new Contract(address, _abi, signerOrProvider) as LockUpgr;
  }
}

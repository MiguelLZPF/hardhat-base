/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IPayableOwner,
  IPayableOwnerInterface,
} from "../../../contracts/interfaces/IPayableOwner";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "message",
        type: "string",
      },
    ],
    name: "ThankYou",
    type: "event",
  },
  {
    inputs: [],
    name: "payMe",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

export class IPayableOwner__factory {
  static readonly abi = _abi;
  static createInterface(): IPayableOwnerInterface {
    return new Interface(_abi) as IPayableOwnerInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IPayableOwner {
    return new Contract(address, _abi, runner) as unknown as IPayableOwner;
  }
}
